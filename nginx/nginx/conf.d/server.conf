server {
    listen          8443 ssl;
    http2           on;

    server_name     DOMAIN;
    server_tokens   off;

    # Headers
    # add_header Content-Security-Policy      "default-src 'self' http: https: ws: wss: data: blob: frame-ancestors 'self';" always;
    add_header Permissions-Policy           "interest-cohort=()" always;
    add_header Permissions-Policy           "browsing-topics=()" always;
    add_header Referrer-Policy              "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security    "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options       "nosniff" always;
    add_header X-Frame-Options              "SAMEORIGIN";
    add_header X-XSS-Protection             "1; mode=block" always;
    proxy_hide_header                       "X-Powered-By";

    # SSL
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:10m;
    ssl_session_tickets         off;
    ssl_session_timeout         30m;
    ssl_stapling                on;
    ssl_stapling_verify         on;
    ssl_ciphers                 "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305"; 
    
    # Certificates
    ssl_certificate             /etc/letsencrypt/live/DOMAIN/fullchain.pem;
    ssl_certificate_key         /etc/letsencrypt/live/DOMAIN/privkey.pem;
    ssl_trusted_certificate     /etc/letsencrypt/live/DOMAIN/chain.pem;

    root                        /data;
    access_log                  /etc/nginx/logs/server.access.log combined;
    error_log                   /etc/nginx/logs/server.error.log warn;

    # Drop non-domain access
    if ($host != $server_name) { 
        return 444;
    }

    # Proxy Subscriptions
    location /BLAHBLAHBLAH {
        try_files $uri $uri/ =403;
    }

    # proxy pass SERVICE
    location / {
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_pass          http://SERVICE:PORT/;
        # rewrite             ^/SERVICE(/.*)$ $1 break;
    }
}

